<?php
$installer = $this;
/* @var $installer Mage_Core_Model_Resource_Setup */
try {
    $installer->startSetup();
    /**
    * Supported Networks
    */
    $networks = array(
        array(
            'key'=>"facebook",
            'title'=>"Facebook",
            'description'=>"Facebook Social Network.",
            'status' => 1,
        ),
        array(
            'key'=>"google",
            'title'=>"Google",
            'description'=>"Google Social Network.",
            'status' => 1,
        ),
        array(
            'key'=>"twitter",
            'title'=>"Twitter",
            'description'=>"Twitter Social Network.",
            'status' => 1,
        ),
    );

    foreach ($networks as $data) {
        $installer->getConnection()
                ->insert($installer->getTable('socnet/network'), $data);
    }

    /**
    * Plugins
    */
    $plugins = array(
        array(
            'key'=>"activity_feed",
            'title'=>"Activity Feed",
            'network_key'=>'facebook',
            'description'=>"The Activity Feed plugin displays the most interesting recent activity taking place on your site.",
            'template' => "activity-feed.phtml",
            'status' => 1,
        ),
        array(
            'key'=>"comments",
            'title'=>"Comments",
            'network_key'=>'facebook',
            'description'=>"Comments Box is a social plugin that enables user commenting on your site. Features include moderation tools and distribution.",
            'template' => "comments.phtml",
            'status' => 1,
        ),
        array(
            'key'=>"facepile",
            'title'=>"Facepile",
            'network_key'=>'facebook',
            'description'=>"The Facepile plugin displays the Facebook profile pictures of users who have connected with your page via a global or custom action, or can also be configured to display users that have signed up for your site.",
            'template' => "facepile.phtml",
            'status' => 1,
        ),
        array(
            'key'=>"like_box",
            'title'=>"Like Box",
            'network_key'=>'facebook',
            'description'=>"The Like Box is a social plugin that enables Facebook Page owners to attract and gain Likes from their own website.",
            'template' => "like-box.phtml",
            'status' => 1,
        ),
        array(
            'key'=>"like_button",
            'title'=>"Like Button",
            'network_key'=>'facebook',
            'description'=>"The Like button lets a user share your content with friends on Facebook. When the user clicks the Like button on your site, a story appears in the user's friends' News Feed with a link back to your website.",
            'template' => "like-button.phtml",
            'status' => 1,
        ),
        array(
            'key'=>"live_stream",
            'title'=>"Live Stream",
            'network_key'=>'facebook',
            'description'=>"The Live Stream plugin lets users visiting your site or application share activity and comments in real time. Live Stream works best when you are running a real-time event, like live streaming video for concerts, speeches, or webcasts, live Web chats, webinars, massively multiplayer games.",
            'template' => "live-stream.phtml",
            'status' => 1,
        ),
        array(
            'key'=>"login_button",
            'title'=>"Login Button",
            'network_key'=>'facebook',
            'description'=>"The Login Button shows profile pictures of the user's friends who have already signed up for your site in addition to a login button.",
            'template' => "login-button.phtml",
            'status' => 1,
        ),
        array(
            'key'=>"recommendations",
            'title'=>"Recommendations Box",
            'network_key'=>'facebook',
            'description'=>"The Recommendations Box shows personalized recommendations to your users. Since the content is hosted by Facebook, the plugin can display personalized recommendations whether or not the user has logged into your site.",
            'template' => "recommendations.phtml",
            'status' => 1,
        ),
        array(
            'key'=>"registration",
            'title'=>"Registration",
            'network_key'=>'facebook',
            'description'=>"The Registration plugin allows users to easily sign up for your website with their Facebook account.",
            'template' => "registration.phtml",
            'status' => 1,
        ),
        array(
            'key'=>"send_button",
            'title'=>"Send Button",
            'network_key'=>'facebook',
            'description'=>"The Send Button allows users to easily send content to their friends.",
            'template' => "send-button.phtml",
            'status' => 1,
        ),
        array(
            'key'=>"subscribe_button",
            'title'=>"Subscribe Button",
            'network_key'=>'facebook',
            'description'=>"The Subscribe button lets a user subscribe to your public updates on Facebook.",
            'template' => "subscribe-button.phtml",
            'status' => 1,
        ),
    );
    foreach ($plugins as $data) {
        $installer->getConnection()
                ->insert($installer->getTable('socnet/plugin'), $data);
    }

   /**
    * Attributes
    */

    $atts = array(
        array(
            'key'=>'header',
            'title'=>'Show header',
            'description'=>"Specifies whether to show the Facebook header.",
        ),
        array(
            'key'=>'verb_action',
            'title'=>'Verb',
            'description'=>"The verb to display on the button. Options: 'like', 'recommend'.",
        ),
        array(
            'key'=>'num_posts',
            'title'=>'Number of posts',
            'description'=>'The number of comments to show by default. Default: 10. Minimum: 1',
        ),
        array(
            'key'=>'width',
            'title'=>'Width',
            'description'=>'The width of the plugin in pixels. Default width: 300px.',
        ),
        array(
            'key'=>'height',
            'title'=>'Height',
            'description'=>'The height of the plugin in pixels. Default height: 300px.',
        ),
        array(
            'key'=>'site',
            'title'=>'Site',
            'description'=>'The domain for which to show activity; include just the full domain name, without http:// or a path. The XFBML version defaults to the current domain.',
        ),
        array(
            'key'=>'colorscheme',
            'title'=>'Color Scheme',
            'description'=>'The color scheme for the plugin.',
        ),
        array(
            'key'=>'filter',
            'title'=>"Filter",
            'description'=>"Allows you to filter which URLs are shown in the plugin. The plugin will only include URLs which contain the filter string in the first two path parameters of the URL. If nothing in the first two path parameters of the URL matches the filter, the URL will not be included. For example, if the 'site' parameter is set to 'www.example.com' and the 'filter' parameter was set to '/section1/section2' then only pages which matched 'http://www.example.com/section1/section2/*' would be included in the activity feed section of this plugin. The filter parameter does not apply to any recommendations which may appear in this plugin (see above); Recommendations are based only on 'site' parameter.",
        ),
        array(
            'key'=>'recommendations',
            'title'=>'Show Recommendations',
            'description'=>'Specifies whether to always show recommendations in the plugin. If recommendations is set to true, the plugin will display recommendations in the bottom half.',
        ),
        array(
            'key'=>'ref',
            'title'=>'Referer parameter',
            'description'=>"A label for tracking referrals; must be less than 50 characters and can contain alphanumeric characters and some punctuation (currently +/=-.:_). Specifying a value for the ref attribute adds the 'fb_ref' parameter to the any links back to your site which are clicked from within the plugin. Using different values for the ref parameter for different positions and configurations of this plugin within your pages allows you to track which instances are performing the best.",
        ),
        array(
            'key'=>'border_color',
            'title'=>'Border Color',
            'description'=>'The border color of the plugin.',
        ),
        array(
            'key'=>'linktarget',
            'title'=>'Target for link showed',
            'description'=>'This specifies the context in which content links are opened. By default all links within the plugin will open a new window. If you want the content links to open in the same window, you can set this parameter to _top or _parent. Links to Facebook URLs will always open in a new window.',
        ),
        array(
            'key'=>'max_age',
            'title'=>'Maximun age',
            'description'=>'A  limit on recommendation and creation time of articles that are surfaced in the plugins, the default is 0 (we don’t take age into account). Otherwise the valid values are 1-180, which specifies the number of days.',
        ),
        array(
            'key'=>'mobile',
            'title'=>'Mobile Version',
            'description'=>'Whether to show the mobile-optimized version. Default: auto-detect.',
        ),
        array(
            'key'=>'href',
            'title'=>'Href',
            'description'=>'The URL to like. The XFBML version defaults to the current page. Defaults: Current page.',
        ),
        array(
            'key'=>'send',
            'title'=>'Include Send Button',
            'description'=>'Specifies whether to include a Send button with the Like button. This only works with the XFBML version.',
        ),
        array(
            'key'=>'layout',
            'title'=>'Layout type',
            'description'=>"There are three options:<br/>
                        * standard - displays social text to the right of the button and friends' profile photos below. Minimum width: 225 pixels. Minimum increases by 40px if action is 'recommend' by and increases by 60px if send is 'true'. Default width: 450 pixels. Height: 35 pixels (without photos) or 80 pixels (with photos).<br/>
                        * button_count - displays the total number of likes to the right of the button. Minimum width: 90 pixels. Default width: 90 pixels. Height: 20 pixels.<br/>
                        * box_count - displays the total number of likes above the button. Minimum width: 55 pixels. Default width: 55 pixels. Height: 65 pixels.",
        ),
        array(
            'key'=>'show_faces',
            'title'=>'Show faces',
            'description'=>'Specifies whether to display profile photos below the button (standard layout only).',
        ),
        array(
            'key'=>'font',
            'title'=>'Font',
            'description'=>"The font to display in the button. Options:<br/>
                * arial<br/>* lucida grande<br/>* segoe ui<br/>* tahoma<br/>* trebuchet ms<br/>* verdana",
        ),
        array(
            'key'=>'action',
            'title'=>'Action',
            'description'=>'A comma separated list of actions to show recommendations for.',
        ),
        array(
            'key'=>'stream',
            'title'=>'Stream',
            'description'=>'Specifies whether to display a stream of the latest posts from the Page\'s wall.',
        ),
        array(
            'key'=>'force_wall',
            'title'=>'Force Wall',
            'description'=>'For Places, specifies whether the stream contains posts from the Place\'s wall or just checkins from friends. Default value: false.',
        ),
        array(
            'key'=>'max_rows',
            'title'=>'Maximum rows to show',
            'description'=>'The maximum number of rows of profile pictures to display. Default value: 1.',
        ),
        array(
            'key'=>'scope',
            'title'=>'Permissions',
            'description'=>"Comma separated list of extended permissions. By default the Login button prompts users for their public information. If your application needs to access other parts of the user's profile that may be private, your application can request extended permissions. A complete list of extended permissions can be found <a href='https://developers.facebook.com/docs/authentication/permissions/'>here</a>.",
        ),
        array(
            'key'=>'registration_url',
            'title'=>'Registration Url',
            'description'=>'Registration page url. If the user has not registered for your site, they will be redirected to the URL you specify in the registration-url parameter. Default: Current Register Url.',
        ),
        array(
            'key'=>'size',
            'title'=>'Size',
            'description'=>'Size of the photos and social context. Default size: small.',
        ),
        array(
            'key'=>'via_url',
            'title'=>'Redirect URL',
            'description'=>'The URL that users are redirected to when they click on your app name on a status (if not specified, your Connect URL is used).',
        ),
        array(
            'key'=>'always_post_to_friends',
            'title'=>'Always post to friends',
            'description'=>"If set, all user posts will always go to their profile. This option should only be used when users' posts are likely to make sense outside of the context of the event. Default: false",
        ),
        array(
            'key'=>'registration',
            'title'=>'Show the registration option',
            'description'=>"If set, the login button will show the option to register the user.",
        ),
        array(
            'key'=>'registration_form_prefill',
            'title'=>'Prefill the registration form',
            'description'=>"Will the form prefill the current registration form or will register the user directly.",
        ),
        array(
            'key'=>'password',
            'title'=>'Ask for password',
            'description'=>"If we want to register the user directly, we need to set this to yes.",
        ),
        array(
            'key'=>'captcha',
            'title'=>'Enable security check',
            'description'=>"If enabled, user will be promted for a captcha check in the registration form.",
        ),
        array(
            'key'=>'profile',
            'title'=>'Profile User',
            'description'=>"Profile URL of the user to subscribe to. This must be a facebook.com profile URL.",
        ),
    );

    foreach ($atts as $data) {
        $installer->getConnection()
                ->insert($installer->getTable('socnet/attribute'), $data);
    }

    $values = array(
    array(
        'plugin_key' => 'activity_feed',
        'attribute_key' => 'header',
        'data' => 'no',
        'type' => 'radios',
        'class' => 'yesno',
        'required' => FALSE,
        'class_name' => 'phi_socnet_radios',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'activity_feed',
        'attribute_key' => 'width',
        'data' => '300',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'activity_feed',
        'attribute_key' => 'height',
        'data' => '300',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'activity_feed',
        'attribute_key' => 'site',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'activity_feed',
        'attribute_key' => 'colorscheme',
        'data' => 'light',
        'type' => 'select',
        'class' => 'colorscheme',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'activity_feed',
        'attribute_key' => 'filter',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'activity_feed',
        'attribute_key' => 'ref',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'activity_feed',
        'attribute_key' => 'recommendations',
        'data' => 'no',
        'type' => 'radios',
        'class' => 'yesno',
        'required' => FALSE,
        'class_name' => 'phi_socnet_radios',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'activity_feed',
        'attribute_key' => 'border_color',
        'data' => '#CECECE',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'activity_feed',
        'attribute_key' => 'linktarget',
        'data' => '_blank',
        'type' => 'select',
        'class' => 'linktarget',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'activity_feed',
        'attribute_key' => 'max_age',
        'data' => '0',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'activity_feed',
        'attribute_key' => 'font',
        'data' => 'arial',
        'type' => 'select',
        'class' => 'font',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'activity_feed',
        'attribute_key' => 'action',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'comments',
        'attribute_key' => 'num_posts',
        'data' => '2',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'comments',
        'attribute_key' => 'width',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'comments',
        'attribute_key' => 'colorscheme',
        'data' => 'light',
        'type' => 'select',
        'class' => 'colorscheme',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'comments',
        'attribute_key' => 'mobile',
        'data' => 'auto-detect',
        'type' => 'select',
        'class' => 'mobile',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'comments',
        'attribute_key' => 'href',
        'data' => Mage::getBaseUrl(),
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'facepile',
        'attribute_key' => 'width',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'facepile',
        'attribute_key' => 'colorscheme',
        'data' => 'light',
        'type' => 'select',
        'class' => 'colorscheme',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'facepile',
        'attribute_key' => 'href',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'facepile',
        'attribute_key' => 'action',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'facepile',
        'attribute_key' => 'max_rows',
        'data' => '1',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'facepile',
        'attribute_key' => 'size',
        'data' => 'medium',
        'type' => 'select',
        'class' => 'size',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_box',
        'attribute_key' => 'header',
        'data' => 'no',
        'type' => 'radios',
        'class' => 'yesno',
        'required' => FALSE,
        'class_name' => 'phi_socnet_radios',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_box',
        'attribute_key' => 'width',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_box',
        'attribute_key' => 'height',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_box',
        'attribute_key' => 'colorscheme',
        'data' => 'light',
        'type' => 'select',
        'class' => 'colorscheme',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_box',
        'attribute_key' => 'border_color',
        'data' => '#CECECE',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_box',
        'attribute_key' => 'href',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_box',
        'attribute_key' => 'show_faces',
        'data' => 'yes',
        'type' => 'radios',
        'class' => 'yesno',
        'required' => FALSE,
        'class_name' => 'phi_socnet_radios',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_box',
        'attribute_key' => 'stream',
        'data' => 'true',
        'type' => 'radios',
        'class' => 'boolean',
    	'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_box',
        'attribute_key' => 'force_wall',
        'data' => 'false',
        'type' => 'radios',
        'class' => 'boolean',
    	'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_button',
        'attribute_key' => 'href',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_button',
        'attribute_key' => 'send',
        'data' => 'true',
        'type' => 'radios',
        'class' => 'boolean',
    	'required' => FALSE,
        'class_name' => 'phi_socnet_radios',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_button',
        'attribute_key' => 'layout',
        'data' => 'standard',
        'type' => 'select',
        'class' => 'layout',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_button',
        'attribute_key' => 'width',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_button',
        'attribute_key' => 'show_faces',
        'data' => 'true',
        'type' => 'radios',
        'class' => 'boolean',
    	'required' => FALSE,
        'class_name' => 'phi_socnet_radios',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_button',
        'attribute_key' => 'verb_action',
        'data' => 'like',
        'type' => 'select',
        'class' => 'verbaction',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_button',
        'attribute_key' => 'colorscheme',
        'data' => 'light',
        'type' => 'select',
        'class'=> 'colorscheme',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_button',
        'attribute_key' => 'font',
        'data' => 'arial',
        'type' => 'select',
        'class'=> 'font',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'like_button',
        'attribute_key' => 'ref',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'live_stream',
        'attribute_key' => 'via_url',
        'data' => Mage::getBaseUrl(),
        'type' => 'text',
        'required' => TRUE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'live_stream',
        'attribute_key' => 'always_post_to_friends',
        'data' => 'true',
        'type' => 'radios',
        'class' => 'boolean',
    	'required' => FALSE,
        'class_name' => 'phi_socnet_radios',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'live_stream',
        'attribute_key' => 'width',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'live_stream',
        'attribute_key' => 'height',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'login_button',
        'attribute_key' => 'width',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'login_button',
        'attribute_key' => 'registration',
        'data' => 'true',
        'type' => 'radios',
        'class' => 'boolean',
        'required' => FALSE,
        'class_name' => 'phi_socnet_radios',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'login_button',
        'attribute_key' => 'show_faces',
        'data' => 'false',
        'type' => 'radios',
        'class' => 'boolean',
    	'required' => FALSE,
        'class_name' => 'phi_socnet_radios',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'login_button',
        'attribute_key' => 'max_rows',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'login_button',
        'attribute_key' => 'scope',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'login_button',
        'attribute_key' => 'registration_url',
        'data' => Mage::helper("customer")->getRegisterUrl(),
        'type' => 'text',
        'required' => TRUE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'registration',
        'attribute_key' => 'header',
        'data' => 'true',
        'type' => 'radios',
        'class' => 'boolean',
    	'required' => FALSE,
        'class_name' => 'phi_socnet_radios',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'registration',
        'attribute_key' => 'registration_form_prefill',
        'data' => 'false',
        'type' => 'radios',
        'class' => 'boolean',
    	'required' => FALSE,
        'class_name' => 'phi_socnet_radios',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'registration',
        'attribute_key' => 'password',
        'data' => 'true',
        'type' => 'radios',
        'class' => 'boolean',
    	'required' => FALSE,
        'class_name' => 'phi_socnet_radios',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'registration',
        'attribute_key' => 'width',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'registration',
        'attribute_key' => 'height',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'registration',
        'attribute_key' => 'captcha',
        'data' => 'true',
        'type' => 'radios',
        'class' => 'boolean',
        'required' => FALSE,
        'class_name' => 'phi_socnet_radios',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'registration',
        'attribute_key' => 'colorscheme',
        'data' => 'light',
        'type' => 'select',
        'class' => 'colorscheme',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'registration',
        'attribute_key' => 'ref',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'registration',
        'attribute_key' => 'border_color',
        'data' => '#CECECE',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'registration',
        'attribute_key' => 'linktarget',
        'data' => '_blank',
        'type' => 'select',
        'class' => 'linktarget',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'registration',
        'attribute_key' => 'max_age',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'registration',
        'attribute_key' => 'font',
        'data' => 'arial',
        'type' => 'select',
        'class'=> 'font',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'send_button',
        'attribute_key' => 'colorscheme',
        'data' => 'light',
        'type' => 'select',
        'class' => 'colorscheme',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'send_button',
        'attribute_key' => 'font',
        'data' => 'arial',
        'type' => 'select',
        'class' => 'font',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'subscribe_button',
        'attribute_key' => 'width',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'subscribe_button',
        'attribute_key' => 'colorscheme',
        'data' => 'light',
        'type' => 'select',
        'class' => 'colorscheme',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'subscribe_button',
        'attribute_key' => 'profile',
        'data' => '',
        'type' => 'text',
        'required' => TRUE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'subscribe_button',
        'attribute_key' => 'layout',
        'data' => 'standard',
        'type' => 'select',
        'class' => 'layout',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'subscribe_button',
        'attribute_key' => 'show_faces',
        'data' => 'true',
        'type' => 'radios',
        'class' => 'boolean',
    	'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'subscribe_button',
        'attribute_key' => 'font',
        'data' => 'arial',
        'type' => 'select',
        'class' => 'font',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'recommendations',
        'attribute_key' => 'header',
        'data' => 'no',
        'type' => 'radios',
        'class' => 'yesno',
        'required' => FALSE,
        'class_name' => 'phi_socnet_radios',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'recommendations',
        'attribute_key' => 'width',
        'data' => '300',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'recommendations',
        'attribute_key' => 'height',
        'data' => '300',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'recommendations',
        'attribute_key' => 'site',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'recommendations',
        'attribute_key' => 'colorscheme',
        'data' => 'light',
        'type' => 'select',
        'class' => 'colorscheme',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'recommendations',
        'attribute_key' => 'filter',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'recommendations',
        'attribute_key' => 'ref',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'recommendations',
        'attribute_key' => 'border_color',
        'data' => '#CECECE',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'recommendations',
        'attribute_key' => 'linktarget',
        'data' => '_blank',
        'type' => 'select',
        'class' => 'linktarget',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'recommendations',
        'attribute_key' => 'max_age',
        'data' => '0',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'recommendations',
        'attribute_key' => 'font',
        'data' => 'arial',
        'type' => 'select',
        'class' => 'font',
        'required' => FALSE,
        'class_name' => 'phi_socnet_select',
        'created_at' => now(),
    ),
    array(
        'plugin_key' => 'recommendations',
        'attribute_key' => 'action',
        'data' => '',
        'type' => 'text',
        'required' => FALSE,
        'class_name' => 'phi_socnet_text',
        'created_at' => now(),
    ),
    );

    foreach ($values as $data) {
        $installer->getConnection()
                ->insert($installer->getTable('socnet/plugin_attribute_value'), $data);
    }
    $installer->endSetup();
} catch (Zend_Db_Statement_Exception $e) {
    Mage::logException($e);
    throw $e;
}